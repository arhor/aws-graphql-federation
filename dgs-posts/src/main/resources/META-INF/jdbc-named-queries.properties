# language=SQL
TagEntity.findAllByIdIn=\
       SELECT pht.post_id AS "post_id", ARRAY_AGG(t.name) AS "tags" \
         FROM tags t \
    LEFT JOIN posts_has_tags pht ON t.id = pht.tag_id \
     GROUP BY pht.post_id \
       HAVING pht.post_id IN (:postIds)

# language=SQL
PostProjection.findAll=\
    SELECT p.id \
         , p.user_id \
         , p.header \
         , p.banner \
         , p.content \
         , p.options \
    FROM posts p \
    LIMIT :limit \
    OFFSET :offset

# language=SQL
PostProjection.findAllByUserIdIn=\
    SELECT p.id \
         , p.user_id \
         , p.header \
         , p.banner \
         , p.content \
         , p.options \
    FROM posts p \
    WHERE p.user_id IN (:userIds)

# language=SQL
PostEntity.unlinkAllFromUser=\
    UPDATE posts \
       SET user_id = NULL \
         , version = version + 1 \
     WHERE user_id = :userId
