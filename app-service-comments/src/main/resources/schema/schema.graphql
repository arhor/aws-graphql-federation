# noinspection GraphQLTypeRedefinition
# noinspection GraphQLMemberRedefinition
# noinspection DgsEntityFetcherInspector

scalar UUID

# ---------- Root Types (Query/Mutation/Subscription) ----------

type Query {
    comment(id: UUID!): Comment
}

type Mutation {
    createComment(input: CreateCommentInput!): Comment!
    updateComment(input: UpdateCommentInput!): Comment!
    deleteComment(id: UUID!): Boolean!

    togglePostComments(postId: UUID!): Boolean!
    toggleUserComments(userId: UUID!): Boolean!
}

# ---------- Input Types ----------

input CreateCommentInput {
    userId: UUID!
    postId: UUID!
    prntId: UUID
    content: String! @NotBlank @Size(min: 1, max: 1024)
}

input UpdateCommentInput {
    id: UUID!
    content: String @NotBlank @Size(min: 1, max: 1024)
}

# ---------- Domain Types ----------

type Comment {
    id: UUID!
    userId: UUID
    postId: UUID!
    prntId: UUID
    content: String!
    replies: [Comment!]
}

# ---------- Federated Types ----------

type Post @key(fields: "id") @extends {
    id: UUID! @external
    comments: [Comment!]
    commentsNumber: Int
    commentsDisabled: Boolean
}

type User @key(fields: "id") @extends {
    id: UUID! @external
    comments: [Comment!]
    commentsDisabled: Boolean
}

# ---------- Directives ----------

directive @NotBlank(
    message: String! = "graphql.validation.NotBlank.message"
) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @Range(
    min: Int! = 0
    max: Int! = 2147483647
    message: String! = "graphql.validation.Range.message"
) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @Size(
    min: Int! = 0
    max: Int! = 2147483647
    message: String! = "graphql.validation.Size.message"
) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION
